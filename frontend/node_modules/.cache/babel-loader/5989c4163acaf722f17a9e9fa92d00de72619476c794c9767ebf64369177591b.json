{"ast":null,"code":"const API_BASE = process.env.REACT_APP_API_URL || 'http://localhost:5000/api';\nasync function request(path, options = {}) {\n  const headers = options.headers || {};\n  const token = localStorage.getItem('token');\n  if (token) headers['Authorization'] = `Bearer ${token}`;\n  headers['Content-Type'] = 'application/json';\n  const res = await fetch(`${API_BASE}${path}`, {\n    ...options,\n    headers\n  });\n  const data = await res.json().catch(() => ({}));\n  if (!res.ok) throw data;\n  return data;\n}\nexport const authRegister = payload => request('/auth/register', {\n  method: 'POST',\n  body: JSON.stringify(payload)\n});\nexport const authLogin = payload => request('/auth/login', {\n  method: 'POST',\n  body: JSON.stringify(payload)\n});\nexport const getTasks = () => request('/tasks');\nexport const addTask = payload => request('/tasks', {\n  method: 'POST',\n  body: JSON.stringify(payload)\n});\nexport const updateTask = (id, payload) => request(`/tasks/${id}`, {\n  method: 'PUT',\n  body: JSON.stringify(payload)\n});\nexport const deleteTask = id => request(`/tasks/${id}`, {\n  method: 'DELETE'\n});","map":{"version":3,"names":["API_BASE","process","env","REACT_APP_API_URL","request","path","options","headers","token","localStorage","getItem","res","fetch","data","json","catch","ok","authRegister","payload","method","body","JSON","stringify","authLogin","getTasks","addTask","updateTask","id","deleteTask"],"sources":["C:/Users/Harshal/Desktop/Vexocore/task-manager-app/frontend/src/api.js"],"sourcesContent":["const API_BASE = process.env.REACT_APP_API_URL || 'http://localhost:5000/api';\n\nasync function request(path, options = {}){\n  const headers = options.headers || {};\n  const token = localStorage.getItem('token');\n  if (token) headers['Authorization'] = `Bearer ${token}`;\n  headers['Content-Type'] = 'application/json';\n  const res = await fetch(`${API_BASE}${path}`, { ...options, headers });\n  const data = await res.json().catch(() => ({}));\n  if (!res.ok) throw data;\n  return data;\n}\n\nexport const authRegister = (payload) => request('/auth/register', { method: 'POST', body: JSON.stringify(payload) });\nexport const authLogin = (payload) => request('/auth/login', { method: 'POST', body: JSON.stringify(payload) });\nexport const getTasks = () => request('/tasks');\nexport const addTask = (payload) => request('/tasks', { method: 'POST', body: JSON.stringify(payload) });\nexport const updateTask = (id, payload) => request(`/tasks/${id}`, { method: 'PUT', body: JSON.stringify(payload) });\nexport const deleteTask = (id) => request(`/tasks/${id}`, { method: 'DELETE' });\n"],"mappings":"AAAA,MAAMA,QAAQ,GAAGC,OAAO,CAACC,GAAG,CAACC,iBAAiB,IAAI,2BAA2B;AAE7E,eAAeC,OAAOA,CAACC,IAAI,EAAEC,OAAO,GAAG,CAAC,CAAC,EAAC;EACxC,MAAMC,OAAO,GAAGD,OAAO,CAACC,OAAO,IAAI,CAAC,CAAC;EACrC,MAAMC,KAAK,GAAGC,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC;EAC3C,IAAIF,KAAK,EAAED,OAAO,CAAC,eAAe,CAAC,GAAG,UAAUC,KAAK,EAAE;EACvDD,OAAO,CAAC,cAAc,CAAC,GAAG,kBAAkB;EAC5C,MAAMI,GAAG,GAAG,MAAMC,KAAK,CAAC,GAAGZ,QAAQ,GAAGK,IAAI,EAAE,EAAE;IAAE,GAAGC,OAAO;IAAEC;EAAQ,CAAC,CAAC;EACtE,MAAMM,IAAI,GAAG,MAAMF,GAAG,CAACG,IAAI,CAAC,CAAC,CAACC,KAAK,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC;EAC/C,IAAI,CAACJ,GAAG,CAACK,EAAE,EAAE,MAAMH,IAAI;EACvB,OAAOA,IAAI;AACb;AAEA,OAAO,MAAMI,YAAY,GAAIC,OAAO,IAAKd,OAAO,CAAC,gBAAgB,EAAE;EAAEe,MAAM,EAAE,MAAM;EAAEC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAACJ,OAAO;AAAE,CAAC,CAAC;AACrH,OAAO,MAAMK,SAAS,GAAIL,OAAO,IAAKd,OAAO,CAAC,aAAa,EAAE;EAAEe,MAAM,EAAE,MAAM;EAAEC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAACJ,OAAO;AAAE,CAAC,CAAC;AAC/G,OAAO,MAAMM,QAAQ,GAAGA,CAAA,KAAMpB,OAAO,CAAC,QAAQ,CAAC;AAC/C,OAAO,MAAMqB,OAAO,GAAIP,OAAO,IAAKd,OAAO,CAAC,QAAQ,EAAE;EAAEe,MAAM,EAAE,MAAM;EAAEC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAACJ,OAAO;AAAE,CAAC,CAAC;AACxG,OAAO,MAAMQ,UAAU,GAAGA,CAACC,EAAE,EAAET,OAAO,KAAKd,OAAO,CAAC,UAAUuB,EAAE,EAAE,EAAE;EAAER,MAAM,EAAE,KAAK;EAAEC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAACJ,OAAO;AAAE,CAAC,CAAC;AACpH,OAAO,MAAMU,UAAU,GAAID,EAAE,IAAKvB,OAAO,CAAC,UAAUuB,EAAE,EAAE,EAAE;EAAER,MAAM,EAAE;AAAS,CAAC,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}